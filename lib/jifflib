#!/usr/bin/env bash

# Functions specific to jiff but not platform-specific

source stdlib
source stringlib
source arraylib

RoleLink="${RoleLink:-${_JIFF_ROOT}/role/current}"
LibExecDirectory="${LibExecDirectory:-${_JIFF_ROOT}/libexec}"
ContextLink="${ContextLink:-${_JIFF_ROOT}/context/current}"

current_context () {
  local context

  context="$( readlink "${ContextLink}" )"
  context=( $(str_split "/" "${context}") )
  context=( $(ary_slice "0" $((${#context[@]}-3)) "${context[@]}") )
  context="$(ary_join "/" "${context[@]}")"
  echo "${context}"
}

context_less_role () {
  local context

  context="$( readlink "${ContextLink}" )"
  context=( $(str_split "/" "${context}") )
  context=( $(ary_slice "0" $((${#context[@]}-2)) "${context[@]}") )
  context="$(ary_join "/" "${context[@]}")"
  echo "${context}"
}

is_jiff_task () {
  is_file "${LibExecDirectory}/jiff-${1}"
}

run_and_exit_if_is_jiff_task () {
  local task

  task="${1}"
  ! is_jiff_task "${task}" || exec jiff "${task}"
}

run_if_is_jiff_task () {
  local task

  task="${1}"
  if is_jiff_task "${task}"; then
    jiff "${task}"
  fi
}

make_rolelinks () {
  local task
  local file

  for file in "${RoleLink}"/jiff-*; do
    match "${file}" "${RoleLink}/jiff-*" && continue
    task="$(base_name "${file}")"
    make_symlink "${LibExecDirectory}/${task}" "${file}"
  done
}
