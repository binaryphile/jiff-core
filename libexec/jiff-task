#!/usr/bin/env bash
# Usage: jiff task add|edit|remove|publish|show TASK
# Summary: Manage jiff tasks

source stdlib

declare -r EDITOR="$(set_editor)"
declare -r PAGER="$(set_pager)"

main () {
  local subtask="${1:-}"
  shift
  
  case "${subtask}" in
    "--complete" )
      echo_completions
      ;;
    "add" )
      git_task "add" "${@}"
      ;;
    "publish" )
      git_task "publish" "${@}"
      ;;
    "edit" )
      git_task "edit" "${@}"
      ;;
    "show" )
      git_task "show" "${@}"
      ;;
    "remove" )
      git_task "remove" "${@}"
      ;;
    * )
      usage
      ;;
  esac
}

copy_sample_task () {
  local filename="${1}"

  install -m 755 "${_JIFF_ROOT}/share/jiff/jiff-sample-task" "${filename}"
  sed -i -e "s|jiff sample-task|jiff ${taskname}|" "${filename}"
  ! shell_is_bash || ! is_file "${HOME}/.bash_history" || tail -50 "${HOME}/.bash_history" >> "${filename}"
}

echo_completions () {
# Provide jiff completions
  cat <<EOM
add
edit
publish
show
EOM
  exit 0
}

git_add_task () {
  local filename="${1}"

  exit_if_is_file "${filename}"
  copy_sample_task "${filename}"
  "${EDITOR}" "${filename}"
  git add "${filename}"
}

git_edit_task () {
  local filename="${1}"

  "${EDITOR}" "${filename}"
  git add "${filename}"
}

git_remove_task () {
  local filename="${1}"

  git rm "${filename}"
  git commit --message "automated commit"
  git push
}

git_task () {
  local kommand="${1}"
  local taskname="${2}"
  local context="${3:-}"
  local filename="jiff-\${taskname}"
  local task_dir="${_JIFF_ROOT}/libexec/context/current"

  taskname_or_exit "${taskname}"
  ! match "${context}" "role" || task_dir="${_JIFF_ROOT}/role/current"
  ! match "${context}" "default" || task_dir="${_JIFF_ROOT}/libexec"
  push_dir "${task_dir}"
  case "${kommand}" in
    "add" )
      git_add_task "${filename}"
      ;;
    "edit" )
      git_edit_task "${filename}"
      ;;
    "publish" )
      git_publish_task "${filename}"
      ;;
    "remove" )
      git_remove_task "${filename}"
      ;;
    "show" )
      show_task "${filename}"
      ;;
  esac
  pop_dir
}

show_task () {
  local filename="${1}"

  "${PAGER}" "${filename}"
}

taskname_or_exit () {
  if is_empty "${1}"; then
    usage
    exit 0
  fi
}

usage () {
  echo "Usage: jiff task add|edit|remove|publish|show TASK"
}

if ! script_is_sourced; then
  strict_mode on
  main "${@}"
fi
