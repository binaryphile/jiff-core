#!/usr/bin/env bash
# Usage: jiff task [add]
# Summary: Manage jiff tasks

source stdlib
# source jifflib # jiff-specific functions
# source platformlib # platform-specific functions

strict_mode_on
# trace_on # for debugging while developing

# Provide jiff completions
if match "${1:-}" "--complete"; then
  cat <<EOM
add
EOM
  exit 0
fi

add_task () {
  local taskname
  local filename

  taskname="${1}"
  if is_empty "${taskname}"; then
    usage
    exit 0
  fi
  filename="jiff-${taskname}"
  push_dir "${_JIFF_ROOT}/libexec"
  if is_file "${filename}"; then
    echoerr "Task already exists!"
    exit 1
  fi
  install -m 755 "${_JIFF_ROOT}/share/jiff/jiff-sample-task" "${filename}"
  sed -i -e "s|jiff sample-task|jiff ${taskname}|" "${filename}"
  ! shell_is_bash || tail -50 "${HOME}/.bash_history" >> "${filename}"
  "${EDITOR:-/usr/bin/vim}" "${filename}"
  git add "${filename}"
  pop_dir
}

publish_task () {
  local taskname
  local filename

  taskname="${1}"
  if is_empty "${taskname}"; then
    usage
    exit 0
  fi
  filename="jiff-${taskname}"
  push_dir "${_JIFF_ROOT}/libexec"
  git add "${filename}"
  git commit --message "automated commit"
  git push
  pop_dir
}

usage () {
  echo "Usage: jiff task add|publish [task_name]"
}

subtask="${1:-}"
shift

case "${subtask}" in
"add" )
  add_task "${@}"
  ;;
"publish" )
  publish_task "${@}"
  ;;
* )
  usage
  ;;
esac
