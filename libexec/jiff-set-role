#!/usr/bin/env bash
# Usage: jiff role [admin|user]

source std.sh
source jiff.sh
source array.sh
source string.sh

declare -r LibExecDir="${_JIFF_ROOT}/libexec"
declare -r ContextLink="${_JIFF_ROOT}/context/current"
declare -r RoleLink="${_JIFF_ROOT}/role/current"

main() {
  local role

  role="${1:-}"
  if std::is_empty "${role}"; then
    usage
    report_current
    exit 0
  fi
  remove_links
  if std::is_match "${role}" "none"; then
    jiff set context none
    exit 0
  fi
  std::make_symlink "${RoleLink}" "${role}"
  if std::is_link "${ContextLink}"; then
    jiff set context "$(current_context)"
  else
    make_rolelinks
  fi
}

available_roles() {
  printf "%s" "${_JIFF_ROOT}/role/*" | grep -v current
}

remove_links() {
  local file
  local link
  local links

  for file in "${RoleLink}"/jiff-*; do
    link="$(std::base_name "${file}")"
    rm -f "${LibExecDir}/${link}"
  done
  read -d "" -a links <<EOM || true
${RoleLink}
EOM
  for link in "${links[@]}"; do
    rm -f "${link}"
  done
}

report_current() {
  local current

  if std::is_link "${RoleLink}"; then
    current="$(readlink "${RoleLink}")"
  else
    current=none
  fi
  cat <<EOM
Currently using: ${current}
EOM
}

usage() {
# TODO: fill in roles from $Roles
  cat <<EOM
Usage: jiff role ROLE

Available roles:

$(available_roles)

EOM
}

return 0 2>/dev/null || true
std::strict_mode on
main "$@"
